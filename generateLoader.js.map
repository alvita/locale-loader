{"version":3,"sources":["generateLoader.js"],"names":["generateLoader","files","chunk","cases","map","f","basename","replace","locale","padding","code","join"],"mappings":";;;;;;;;;;;;kBAGwBA,c;;AAHxB;;;;AACA;;;;;;AAEe,SAASA,cAAT,OAGZ;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,wBADDC,KACC;AAAA,MADDA,KACC,8BADO,IACP;;AACD,MAAMC,QAAQF,MAAMG,GAAN,CAAU,UAACC,CAAD,EAAO;AAC7B,QAAMC,WAAWD,EAAEE,OAAF,CAAU,eAAV,EAA2B,EAA3B,CAAjB;AACA,QAAMC,SAAS,4BAAaF,QAAb,CAAf;AACA,QAAMG,UAAUP,QAAQ,IAAR,GAAe,EAA/B;AACA,QAAIQ,0BACMD,OADN,iCACwCH,QADxC,0BAEMG,OAFN,6DAAJ;AAGA,QAAIP,KAAJ,EAAW;AACTQ,oDAC2BJ,QAD3B,2BACwDI,IADxD,2BAEYF,MAFZ;AAGD;AACD,mCACcA,MADd,aAC2BE,IAD3B;AAID,GAhBa,CAAd;AAiBA,gDAEyBP,MAAMQ,IAAN,CAAW,EAAX,CAFzB;AASD","file":"generateLoader.js","sourcesContent":["import dedent from 'dedent';\nimport formatLocale from './formatLocale';\n\nexport default function generateLoader({\n  files,\n  chunk = true,\n}) {\n  const cases = files.map((f) => {\n    const basename = f.replace(/\\.(js|json)$/i, '');\n    const locale = formatLocale(basename);\n    const padding = chunk ? '  ' : '';\n    let code = `\n            ${padding}const data = require('./${basename}');\n            ${padding}resolve(data.__esModule === true ? data.default : data);`;\n    if (chunk) {\n      code = `\n            require.ensure(['./${basename}'], (require) => {${code}\n            }, '${locale}');`;\n    }\n    return `\n          case '${locale}': {${code}\n            break;\n          }`;\n  });\n  return dedent`export default function loadLocale(locale) {\n      return new Promise((resolve) => {\n        switch (locale) {${cases.join('')}\n          default:\n            resolve({});\n            break;\n        }\n      });\n    }\\n`;\n}\n"]}